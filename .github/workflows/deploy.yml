name: Deploy SecureHerAI API to Azure VM

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}

      - name: Add Azure VM to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.AZURE_VM_HOST }}" >> ~/.ssh/known_hosts

      - name: Install Docker on Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no "${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}" << 'EOF'
            # Install Docker Engine
            curl -fsSL https://get.docker.com | sh
            # Allow running docker without sudo
            sudo usermod -aG docker "$USER"
          EOF

      - name: Create & use Docker context for Azure VM
        run: |
          docker context create azure-vm \
            --docker "host=ssh://${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}"
          docker context use azure-vm

      - name: Generate .env for API
        working-directory: secureherai-api
        run: |
          cat <<EOF > .env
          MAIL_HOST=${{ secrets.MAIL_HOST }}
          MAIL_PORT=${{ secrets.MAIL_PORT }}          
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}

          OAUTH2_CLIENT_ID=${{ vars.OAUTH2_CLIENT_ID }}
          OAUTH2_CLIENT_ID_ANDROID=${{ vars.OAUTH2_CLIENT_ID_ANDROID }}
      
      
          OAUTH2_CLIENT_SECRET=${{ secrets.OAUTH2_CLIENT_SECRET }}
          OAUTH2_WEB_ORIGIN=${{ vars.OAUTH2_WEB_ORIGIN }}
          OAUTH2_WEB_REDIRECT_URI=${{ vars.OAUTH2_WEB_REDIRECT_URI }}
          EOF

      - name: Deploy SecureHerAI API
        working-directory: secureherai-api
        run: |
          # Copy .env file to Azure VM
          scp -o StrictHostKeyChecking=no .env "${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:/home/${{ secrets.AZURE_VM_USER }}/"

          # Stop existing containers gracefully
          docker compose -f docker-compose-deploy.yml down --timeout 30 || true

          # Clean up old images (optional, saves space)
          docker image prune -f || true

          # Build and deploy
          docker compose -f docker-compose-deploy.yml up --build -d --remove-orphans
          
          # Wait for services to be healthy
          echo "Waiting for services to start..."
          timeout 300 bash -c 'while [[ "$(docker compose -f docker-compose-deploy.yml ps --services --filter "status=running" | wc -l)" != "2" ]]; do sleep 5; done' || echo "Timeout waiting for services"

      - name: Verify API deployment
        working-directory: secureherai-api
        run: |
          docker compose -f docker-compose-deploy.yml ps
          echo "Checking API health..."
          sleep 30
          curl -f http://${{ secrets.AZURE_VM_HOST }}:8080/actuator/health || echo "API health check failed"

      - name: Reset Docker context
        if: always()
        run: |
          docker context use default
          docker context rm azure-vm
